NOW:
    ✔ Fix thetvdb api login @done(18-10-22 01:28)
        - The login POST request now takes the following schema:
        {
            "apikey": "string",
            "userkey": "string",
            "username": "string"
        }
    ✘ Update the query for unwatched episodes to group the result by tvshowId and season @cancelled(18-10-06 00:01)
    ✔ Seasons in watchlist are not ordered correcly @done(18-10-05 23:45)
        Repro: Add a tvshow with more than 10 seasons. Season 10 will be the first one, when it should be the last.
        This was fixed by doing a sortBy. Ideally, the db query would transform the data being returned.
    ✔ Remove dropdown + counter from watchlist on mobile, when there are no unwatched episodes @done(18-10-05 22:49)
    ✔ Refactor controllers @done(18-10-05 22:44)
        ✔ Auth @done(18-08-08 00:02)
        ✔ Bug @done(18-08-07 23:15)
        ✔ Calendar @done(18-08-07 23:23)
        ✔ Tvshow @done(18-08-08 00:16)
            ✘ getData @cancelled(18-10-05 22:44)
        ✔ User @done(18-08-07 22:14)
    ✔ Consider removing the collapsed sidebar @done(18-10-05 22:43)
        Since im not saving the "sidebar state", this is pretty much useless.
        Although I've already done this before, I dont think its worth it, so I'm removing it.
        ✔ Clean pug @done(18-10-05 22:29)
            span#toggle-sidebar.icon-caret-left
            span#close-sidebar.icon-close.d-none
        ✔ Cleas scss @done(18-10-05 22:43)
        ✔ Clean js @done(18-10-05 22:43)
    ✔ Show year on calendar @done(18-10-05 22:16)
        This is useful when the current month is near a year change (Nov - Feb) where the user may switch back and forth
        and may get confused on what year the calendar is on
        ✔ Check if span.calendar__nav is used in any event @done(18-10-05 22:17)
    ✔ Calendar crashes when navigating to a future year @done(18-10-05 22:14)
        eg: http://localhost:3000/tsm/calendar/2019/1
        There were multiple issues on the first step on buildCalendar: the year was static so it would get the
        wrong past days, and the month was just substracting 1, so it crashed when the result of that was 0 (January - 1 === 0)
    ✔ Make imdbRating a decimal number with 1 decimal place @done(18-10-05 18:27)
    ✔ Refactor padding left methods in calendar.build @done(18-10-05 18:02)
        Use padStart method
    ✔ Consider refactoring date's format in the database @done(18-10-04 13:26)
        Im currently changing the date format to DMY on the database creation process, which is required for the getEpisodes query to work.
        This is not a good idea. (see OneNote docs)
        I think the only change needed is the start/end intervals that need to be set as YMD, and not DMY.
    ✔ Fix episode airdate format on the tvshow's page @done(18-10-05 18:43)
        Current format: YYYY-MM-DD
        Should be: DD-MM-YYYY

        This only happens when the tvshow is not on the db (= data fetched from the api)
    ✔ Watchlist dropdown selector doesnt work on mobile @done(18-10-02 18:11)
        Selecting between multiple tvshows doesnt update the episodes table.

        Again: The issue was on the css selector since I've refactored some clases but forgot to update this one.
    ✔ Checkbox's are missing from calendar @critical @done(18-10-05 20:04)
        This is the problem: - if (j + k <= calendar.daysFromPreviousMonth + calendar.day - 1)
            I've commented this out temporarily

        This if statment is supposed to check if the episode has already aired, because it doesnt make sense
        to allow marking an un-aired episode as watched.

        This is working correctly on the current month calendar. The issue is on past months, because the index
        of the current day doesnt change.
    ✔ Fix watchlist counter @done(18-10-02 17:32)
        When marking an episode as watched, the count shows "-1"
        When marking a season as watched, the count shows "NaN"

        The issue was on the css selector since I've refactored some clases but forgot to update this one.
    ✔ Clicking on a tvshow poster in watchlist doesn't do anything @done(18-10-02 17:27)
        Again: The issue was on the css selector since I've refactored some clases but forgot to update this one.
    ✔ Search page throws an error @done(18-10-05 19:16)
        SyntaxError: Unexpected token (160:3)
        repro: go to http://localhost:3002/tsm/tvshows/search_full/power
                or http://localhost:3002/tsm/tvshows/search_full/the%20big%20bang
    ✔ Fix docs @done(18-08-08 20:32)
    ✔ Types must be capitalized @done(18-08-08 20:32)
        Specially the returns that were changed from bools to promises
    ✔ Remove email for now @done(18-08-08 20:09)
        I've made a clean install on the VPS and wont install an email server. It's too much work and not worth it.
        Looking into Sendgrid, Mailchimp, etc.. Check what's included in the Github Students pack.
    ✔ Refactor where this is _.defaultTo(values, null) @done(18-08-08 20:17)
        Because the result of an empty select is an empty array
    ✔ Remove '-' from docs @done(18-08-08 20:30)
    ✔ Add/Remove tvshow should be a POST/DELETE. Also, the POST doesnt make much sense without @done(18-08-08 21:49)
        a body. Consider changing to /tvshows/add and pass the tvshowid in the body.
    ✔ Check for hardcoded messages @done(18-08-08 20:46)
        ✔ message_error @done(18-08-08 20:46)
        ✔ message: @done(18-08-08 20:45)
        ✔ error: @done(18-08-08 20:45)
    ✔ Refactor models @done(18-08-08 20:32)
        ✔ Bug @done(18-08-08 00:18)
        ✔ Calendar @done(18-08-08 00:20)
        ✔ Tvshow @done(18-08-08 20:32)
        ✔ User @done(18-08-08 15:29)
    ✔ Check for unnecessary async keyword @done(18-08-08 20:32)
    ✔ Replace _.get(req, 'body.FOO') by _.get(req.body, 'FOO') @done(18-08-08 20:32)
        Body always exist
    ✔ Should return res.json / next / ... ??? @done(18-08-08 20:34)
            If there's nothing to do after the response, yes.
            If you need to log something or whatever, remove the return keyword
    ✘ Fix error @cancelled(18-08-08 20:32)
        - Shows up on signup (probably email gen ?)
        (node:12588) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues.
        Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.

        This stopped showing up. Dont know why.
    ✔ Add _.isEmpty validation where _.isString is used @done(18-08-04 22:33)
        Because _.isString("") returns true
    ✔ Search for error responses without status @done(18-08-04 21:52)
        I've already found 2 cases where the status was not defined (defaulted to 200)
    ✔ Move knex code from controllers to model @done(18-08-04 21:51)
    ✔ No need for _.get when doing parseInt @done(18-08-04 20:57)
        parseInt(undefined) returns NaN
    ✔ Restrict the user_id + tvshow_id combination to unique in the db @done(18-08-04 20:53)
        Without this, a user can follow the same tvshow multiple times since the combination uniqueness
        is not verified
    ✔ Make gulp task to copy the fonts folder @done(18-08-02 03:50)
    ✔ Consider moving .env to src/ so that I can use the dotenv.config w/ path and make them both work on dev and prod without making changes @done(18-08-02 03:49)
        Also test migrations/seeds in both environments
        Solved using __dirname and path.join and placing the env file inside /src (and inside /dist)
    ✔ Check for unused bootstrap modules @done(18-07-26 00:38)
    ✔ When building for production, the social icons folder is copied to dist @done(18-07-26 01:36)
    ✔ Recaptcha js/css should only be loaded when the modals that required it are opened @done(18-07-26 01:01)
    ✔ JS minify/uglify is not working when building for production @done(18-07-26 01:01)
        Gulp flag --production is not making effect, using cross-env to fix
    ✔ Reduce size of google font @done(18-07-26 01:02)
        Tip #1: Request specific letters/numbers
            <link href='http://fonts.googleapis.com/css?family=Cabin+Sketch&text=1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%20' rel='stylesheet' type='text/css' />
            - Test
                - Original
                    https://fonts.googleapis.com/css?family=Roboto
                    Size: 557
                - Modified
                    https://fonts.googleapis.com/css?family=Roboto&text=1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz%20
                    Size: 345
    ✔ Check if all images have alt's @done(18-07-26 01:35)
    ✔ Clean up css and lint @done(18-07-26 01:33)
    ✔ Consider changing the use of .each by js's native 'for each' @done(18-07-25 01:05)
    ✔ Replace .pull-right and .pull-left by float-right and float-left @done(18-07-24 21:18)
    ✔ Fix foreach loops because of duplicated rows in tables @done(18-07-24 21:01)
        When marking a season as watched the data is
        ["1","","2","","3","","4","","5","","6","","7","","8"]
        This was caused by the added "invisible" rows for expanding the episodes overview.
    ✔ Add snippet in VS Code for console.log(JSON.stringify(VAR_NAME_HERE, null, 2)); @done(18-07-18 19:24)
    ✔ Fix text in search full @done(18-07-01 14:58)
        It should be "Found X tvshow(s)" not episodes
    ✔ Bugs in episode values @done(18-07-01 14:58)
        ✔ Episode name should be null but shows empty @done(18-07-01 14:54)
            The OA - S02E02
        ✔ Episode 0 should not show up @done(18-07-01 14:58)
            Shooter - S02E00
    ✔ After removing ALL episodes in "watchlist", it doesnt show the "You don't have any unwatched episodes." @done(18-06-29 18:30)
        This needs to be triggered via JS.
    ✘ Bug: Bluebird warning with tarn (pool used by knex) @cancelled(18-06-29 18:31)
        (node:8372) Warning: a promise was created in a handler at domain.js:121:23 but was not returned from it, see http://goo.gl/rRqMUw
        at new Promise (E:\Dev\tvshows-manager\node_modules\bluebird\js\release\promise.js:79:10)

        Full stack (edited the debbugability.js file from bluebird):
        Stake (line 433)
        [ '    at defer (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\utils.js:9:19)',
        '    at new Resource (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\Resource.js:10:21)',
        '    at callbackOrPromise.then.resource (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\Pool.js:310:24)',
        '    at runCallback (timers.js:696:18)',
        '    at tryOnImmediate (timers.js:667:5)',
        '    at processImmediate (timers.js:649:5)',
        '    at process.topLevelDomainCallback (domain.js:121:23)' ]
        ------------ END STACK ------------
        (node:11520) Warning: a promise was created in a handler at domain.js:121:23 but was not returned from it, see http://goo.gl/rRqMUw
            at new Promise (E:\Dev\tvshows-manager\node_modules\bluebird\js\release\promise.js:79:10)
        Stake (line 433)
        [ '    at defer (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\utils.js:9:19)',
        '    at new Resource (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\Resource.js:10:21)',
        '    at Resource.resolve (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\Resource.js:19:12)',
        '    at Pool._doAcquire (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\Pool.js:236:27)',
        '    at Pool._tryAcquireOrCreate (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\Pool.js:210:12)',
        '    at pendingCreate.promise.then (E:\\Dev\\tvshows-manager\\node_modules\\tarn\\lib\\Pool.js:280:14)',
        '    at runCallback (timers.js:696:18)',
        '    at tryOnImmediate (timers.js:667:5)',
        '    at processImmediate (timers.js:649:5)',
        '    at process.topLevelDomainCallback (domain.js:121:23)' ]
        ------------ END STACK ------------
        (node:11520) Warning: a promise was created in a handler at domain.js:121:23 but was not returned from it, see http://goo.gl/rRqMUw
            at new Promise (E:\Dev\tvshows-manager\node_modules\bluebird\js\release\promise.js:79:10)

        From what I understand, this can be safelly ignored.
        From tarn github: https://github.com/Vincit/tarn.js/issues/5
            TLDR: It is an issue of a promise being created in a handler and not returned from it, but that's done intentionally.
    ✔ PWA @done(18-06-27 20:43)
        ✔ Add manifest.json @done(18-06-27 01:32)
        ✔ Add icons @done(18-06-27 17:59)
        ✔ Add gulp task to copy manifest.json from src to dist @done(18-06-27 18:10)
        ✘ Add service worker @cancelled(18-06-27 20:38)
            This was kinda working but needs a lot of configuring.. Im skipping this for now.
            ✔ Cache files @done(18-06-27 20:29)
            ✔ Disable in dev mode ? @done(18-06-27 20:29)
                ✔ Figure out how to make it work with browsersync @done(18-06-27 20:29)
                    Browsersync messes up the service worker.
                To keep the code unchanged, the sw can be disabled via dev tools:
                    Application>Service Workers path select the Update on refresh checkbox
                    Then select the Bypass for network option shown in above image to avoid the registration
        ✔ Test in prod @done(18-06-27 20:43)
        ✔ Test with lighthouse @done(18-06-27 20:38)
    ✘ On mobile, marking a season as watched throws an error (duplicate key value violates unique constraint) @cancelled(18-06-27 20:42)
        This is probably related to manual db modifications.
    ✔ On mobile, make the topbar black (in chrome itself) @done(18-06-27 01:31)
    ✘ On mobile, login/signup buttons dont work @cancelled(18-06-27 01:00)
        Dont know what caused this. Its working atm.
    ✔ Fix index cards on index on SM/MD screens @done(18-06-27 00:49)
    ✔ Change tvshow status from 'Continuing' to 'Running' (or whatever Im using) on the full search results page @done(18-06-23 01:21)
    ✔ Validate search input before redirecting to search_full @done(18-06-23 01:50)
        Atm, there's no validation, so a search for null is valid, although the server responds with 500.
        ✔ Client-side @done(18-06-23 01:24)
        ✔ Server-side @done(18-06-23 01:50)
    ✔ Bug: When searching using the "full search" feature, the query is always "GO" @done(18-06-20 21:38)
        This only happens when the form is submited on mobile
        "GO" is the content of the "value" attribute on the input

        The issue is here:-
        var tvshowName = event.target[1].value;
            On mobile, the input is target[0] (and target[1] is the button)
            On desktop, the input is target[1] (and target[0] is the typeahead input)

        Fixed by using an ID selector on the input
    ✔ Fix reduced sidebar on desktop @done(18-06-23 00:44)
        This is now fixed on <= MD screens. Check on LG.
    ✘ Use an overlay when the sidebar is open on mobile @cancelled(18-07-18 19:24)
        Not going to bother with this now, because the "pseudo" overlay is working and this is just
        an improvement

        This overlay needs to be placed at the root (like a modal)
        Add a click event that closes the sidebar and removes the overlay
        ✘ Consider preventing scroll @cancelled(18-07-18 19:25)
            .noScroll {
                overflow: hidden;
                position: fixed;
            }
    ✔ Stop typeahead requests on mobile @done(18-06-20 21:21)
        Typeahead is hidden on mobile but it's still making requests

        Using the matchMedia API I'm able to check if the client is on mobile or not.
        ✔ Fix style on mobile @done(18-06-20 21:39)
            Typeahead is now working as expected but this broke the styling

            Since typeahead is not initialized anymore on mobile, the styles are broken.
            Also, remove the work-around code I had to hide the typeahead results div on mobile.
    ✘ Check: Adding 'The OA' and then going into 'Watchlist' only shows season 1 eps @cancelled(18-06-20 19:01)
        The thing is the tvshow page shows season 2 eps
        To consider: All 4 episodes from season 2, have a TBC on the airdate

        The issue is on: .where('episodes.airdate', '<=', knex.fn.now())

        Im not checking for future episodes. And it makes sense since the "watchlist" is to mark episodes as watched.
    ✔ Fix error when going to a tvshow page where some episode doesnt have an airdate (eg: The OA - Season 1, Breaking Bad - season uknown) @done(18-06-20 18:55)
        Error fetching episodes. Error details: error: insert into "episodes" ("airdate", "epnum", "overview", "season", "title", "tvshow_id")
        values ($1, $2, $3, $4, $5, $6), ($7, $8, $9, $10, $11, $12), ($13, $14, $15, $16, $17, $18), ($19, $20, $21, $22, $23, $24),
        ($25, $26, $27, $28, $29, $30), ($31, $32, $33, $34, $35, $36), ($37, $38, $39, $40, $41, $42), ($43, $44, $45, $46, $47, $48),
        ($49, $50, $51, $52, $53, $54), ($55, $56, $57, $58, $59, $60), ($61, $62, $63, $64, $65, $66), ($67, $68, $69, $70, $71, $72)
        .- invalid input syntax for type date: ""

        This is ok on the frontend as I'm showing 'TBC' instead of null.
        Solution:
            ✔ Fix database insert on the date field @done(18-06-20 18:55)
                If the airdate is null, insert NULL in the db. (Currently inserting "")
    ✔ Calendar @done(18-07-23 21:20)
        ✔ M: Allow marking an episode as watched/unwatched @done(18-07-19 18:55)
            ✔ Add icon @done(18-07-19 18:55)
            ✔ Add handler @done(18-07-19 18:55)
        ✔ M: When going to a previous/future month, the highlighted day is the current day. @done(18-07-19 20:06)
            If the current day is still on that month (eg: calendar for 'june', current day is '01 july'), highlight that day
            If not, dont highlight any day

            For now, Im not highlighting any day, even if the day is on a past/future month.
        ✔ M: When selecting a special episode (season begin, season finale, watched), the day description should show that @done(18-07-19 18:07)
            Currently, the dot is highlighted on the calendar (green, red, grey w/ opacity) but the text doesnt reflect that
        ✔ M: When going to the calendar, the date below the calendar is wrong @done(18-07-19 17:55)
        ✘ LOW: animate the "over line" when marking an episode as watched/unwatched @cancelled(18-07-19 16:55)
            https://stackoverflow.com/questions/36267507/is-it-possible-to-animate-a-css-line-through-text-decoration
        ✔ User shouldnt be able to mark an unaired episode as watched/unwatched @done(18-07-19 01:15)
            Remove the checkbox
        ✔ Update watchlist counter When marking an episode as watched/unwatched @done(18-07-18 19:36)
        ✔ Add a way to mark an episode as watched/unwatched @done(18-07-18 19:28)
        ✔ Fix date on eplist according to the selected table cell @done(18-07-03 12:49)
        ✔ Revert test changes @done(18-07-01 21:49)
            ul(class={'d-none' : i !== 6}).calendar__eplist
            should be
            ul(class={'d-none' : i !== 0}).calendar__eplist

            p(class={'d-none' : i !== 6}) No episodes
            should be
            p(class={'d-none' : i !== 0}) No episodes
    ✔ Watchlist @done(18-07-25 01:05)
        ✔ M: Show episode description when clicking on an episode row @done(18-07-19 19:23)
        ✘ M: Re-add episode description with text-ellipsis and a clickable (...) @cancelled(18-07-19 16:56)
        ✔ D: Episode description must also be trimed on desktop @done(18-07-19 01:02)
        ✔ Make table columns have a fixed width @done(18-07-01 15:07)
        ✔ M: 'counter' should change when the "option" on the "select" dropdown is changed @done(18-06-20 16:48)
            Count all episodes from all tables (seasons)
        ✘ M: Change "option" background color (on hover) @cancelled(18-06-18 15:46)
        ✔ D: Remove hover animation on #sidebar-counter @done(18-06-20 19:02)
        ✔ D: Fix 'counter' style @done(18-06-16 23:19)
        ✔ D: Check if 'data-tvshowid=tvshow.tvshowId' is needed on both the LI and the IMG @done(18-06-18 15:46)
        ✔ Fix counter/li(img) @done(18-06-18 15:43)
            - When checking season as watched, the counter is not updated and the li element is not removed
            Repro: Add westworld/flashforward to following and mark all episodes as watched

            - Cenario 1:
                - Add westworld
                - Both seasons = 19 eps (s1 = 10, s2 = 9)
                - Mark season 1 as watched
                    - Expected counter to be 9
                    - Counter is 104

            - Shows with 0 unwatched episodes are still shown
                Repro: Add westworld, mark all eps as watched, see the LI still there

            There were multiple issues here:
                - #1: I was fetching special episodes (season 0) which would affect the unwatched episodes count,
                and since I'm not showing them in the watchlist page, there was no way to mark them as watched/unwatched
                    - This was fixed by removing the season 0 episodes when fetching from the db
                - #2: I was updating the local/poster counter with the global counter value

  ✔ Bug promises @done(18-06-18 15:06)
      (node:13200) Warning: a promise was created in a handler at E:\OneDrive\OneDrive - Universidade do Porto\dev\tvshows-manager\node_modules\tarn\lib\Pool.js:310:24 but was not returned from it, see http://goo.gl/rRqMUw
      at new Promise (E:\OneDrive\OneDrive - Universidade do Porto\dev\tvshows-manager\node_modules\bluebird\js\release\promise.js:79:10)
      (node:13200) Warning: a promise was created in a handler at E:\OneDrive\OneDrive - Universidade do Porto\dev\tvshows-manager\node_modules\tarn\lib\Pool.js:280:14 but was not returned from it, see http://goo.gl/rRqMUw
      at new Promise (E:\OneDrive\OneDrive - Universidade do Porto\dev\tvshows-manager\node_modules\bluebird\js\release\promise.js:79:10)
  ✔ Bug in gulp watch @done(18-06-20 16:41)
      [22:09:09] [gulp-watch] Watched unexpected path. This is likely a bug. Please open this link to report the issue:
      https://github.com/floatdrop/gulp-watch/issues/new?title=Watched%20unexpected%20filepath&body=Node.js%20version%3A%20%60v8.11.3%20win32%20x64%60%0Agulp-watch%20version%3A%20%605.0.0%60%0AGlobs%3A%20%60%5B%22public%2Fsass%2F**%2F*.scss%22%2C%22!public%2Fsass%2Fvendor%2F**%2F*.scss%22%5D%60%0AFilepath%3A%20%60E%3A%5COneDrive%5COneDrive%20-%20Universidade%20do%20Porto%5Cdev%5Ctvshows-manager%5Csrc%5Cpublic%5Csass%5Cvendor%5Cbootstrap%5Cmixins%5C_navbar-align.scss%60%0AEvent%3A%20%60change%60%0AProcess%20CWD%3A%20%60E%3A%5COneDrive%5COneDrive%20-%20Universidade%20do%20Porto%5Cdev%5Ctvshows-manager%60%0AOptions%3A%0A%60%60%60js%0A%7B%0A%20%20%22events%22%3A%20%5B%0A%20%20%20%20%22add%22%2C%0A%20%20%20%20%22change%22%2C%0A%20%20%20%20%22unlink%22%0A%20%20%5D%2C%0A%20%20%22ignoreInitial%22%3A%20true%2C%0A%20%20%22readDelay%22%3A%2010%2C%0A%20%20%22cwd%22%3A%20%22.%2Fsrc%2F%22%0A%7D%0A%60%60%60

      This is probably related to views ?

      I've changed the gulp config, keep an eye on this.
  ✔ Show number of unwatched episodes in the sidebar near "watchlist" @done(18-06-20 19:31)
      This number should be fetched on login and stored (to avoid querying it every page change)
      ✔ Get value on login and save it somewhere @done(18-06-20 19:31)
          cookies ?
      ✔ Update value @done(18-06-20 19:31)
          ✔ When setting an episode as watched @done(18-06-20 19:31)
          ✔ When setting an episode as unwatched @done(18-06-20 19:31)
          ✔ When adding/removing a tvshow @done(18-06-20 19:31)
  ✔ Replace hard-coded URLS by lodash templates @done(18-06-13 23:01)
      Most of them are alreay created in the constants file
  ✔ Highlight special episodes @done(18-06-30 15:53)
      ✔ First episode of season @done(18-06-30 15:53)
          ep_num === 1
      ✔ Last episode of season @done(18-06-30 15:53)
          I cant do this using the User.getEpisodes method because I only get the episodes from
      a particular month; and the season finale may be in the following month,
      so the last episode of a particular month is not really the last episode of the season.
          For now I'm going to make a separate query to figure out what's the last episode from a
      particular season for a particular tvshow. (this is not ideal, maybe consider having the
      tvshow episodes on separate tables ?)

          For each tvshow that a user is following, get the MAX(episode number) and the tvshow id,
      and compare it to the episodes fetched from User.getEpisodes()

          1. Get (following) tvshows
          2. For every tvshow, get the latest episode
              select max(ep_id) where tvshow_id = 123 and MAX(season)
              -> Select max episode where tvshow id and from latest season

              SELECT id
              FROM episodes
              WHERE tvshow_id = 276562
              AND epnum = (SELECT MAX(epnum) FROM episodes WHERE season = (SELECT MAX(season) FROM episodes WHERE tvshow_id = 276562))
              AND season = (SELECT MAX(season) FROM episodes WHERE tvshow_id = 276562)

              "season" must be an array of seasons because I want all the seasons finales, not just from the last season

          From https://stackoverflow.com/questions/612231/how-can-i-select-rows-with-maxcolumn-value-distinct-by-another-column-in-sql

              Solution #1:
                  SELECT m.*                    -- get the row that contains the max value
                  FROM episodes m                 -- "m" from "max"
                      LEFT JOIN episodes b        -- "b" from "bigger"
                          ON m.season = b.season    -- match "max" row with "bigger" row by `home`
                          AND m.epnum < b.epnum           -- want "bigger" than "max"
                  WHERE b.epnum IS NULL      -- keep only if there is no bigger than max
              Solution #2:
                  SELECT tt.*
                  FROM episodes tt
                  INNER JOIN
                      (SELECT season, MAX(epnum) AS Maxepnum
                      FROM episodes
                      GROUP BY season) groupedtt
                  ON tt.season = groupedtt.season
                  AND tt.epnum = groupedtt.Maxepnum
              Solution #3:
                  SELECT *
                  FROM episodes AS t1
                  WHERE
                      (SELECT COUNT(*)
                              FROM episodes AS t2
                              WHERE t2.season = t1.season AND t2.epnum > t1.epnum
                      ) = 0

              Expected return:
                  12 rows

                  321060 - The OA - S1: 8 / S2: 4
                  276562 - Power - S1: 8 / S2: 10 / S3: 10 / S4: 10 / S5: 7
                  296762 - Westworld - S1: 10 / S2: 10
                  311900 - Shooter - S1: 10 / S2: 8-7 / S3: 13

              Actual return:
                  (all solutions return the same values)
                  538	276562	5	7	"A Friend of the Family"		"2018-08-12"	"2018-06-27 20:42:09.792087+01"
                  546	276562	2	10	"Ghost Is Dead"	"Bodies from Ghost's organization drop left and right, each death inching closer to Ghost and Tommy."	"2015-08-15"	"2018-06-27 20:42:09.792087+01"
                  548	276562	4	10	"You Can't Fix This "	"When tragedy befalls the St. Patrick family, Ghost and Tommy seek retribution. Tasha tries to keep things together at home until she realises it will be on her to prevent further disaster, causing her to seek help from an unlikely ally. Meanwhile, Angela uses her own investigative skills and resources to figure out what Ghost is hiding and the return of an old friend heralds a call to war."	"2017-09-03"	"2018-06-27 20:42:09.792087+01"
                  566	296762	0	2	"Westworld: The Story So Far"		"2018-04-02"	"2018-06-29 19:48:46.783549+01"
                  581	296762	1	10	"The Bicameral Mind"	"Ford unveils his bold new narrative; Dolores embraces her identity; Maeve sets her plan in motion."	"2016-12-04"	"2018-06-29 19:48:46.783549+01"
                  582	296762	2	10	"The Passenger"	"Host and humans converge at the Valley Beyond."	"2018-06-24"	"2018-06-29 19:48:46.783549+01"
                  610	311900	1	10	"Primer Contact"	"Bob Lee, Julie, Nadine and Isaac work together to breach the Russian embassy, save Mary, shut down the conspiracy and prove Bob Lee innocent."	"2017-01-17"	"2018-06-29 19:48:54.279769+01"
                  614	311900	3	13	"Red Light"		"2018-09-13"	"2018-06-29 19:48:54.279769+01"

                  What's missing:
                      276562 - Power - S1: 8 / S3: 10
                      311900 - Shooter - S2: 8-7
                      321060 - The OA - S1: 8 / S2: 4

                  The problem with these solutions is that they dont care about the column tvshow_id.
                  All they return is the MAX(epnum) for each SEASON value. (including duplicates)

              - I ended up posting this on SO
              Solution #1:
                  SELECT id FROM episodes
                  WHERE (tvshow_id, season, epnum) IN (
                      SELECT tvshow_id, season, MAX(epnum)
                      FROM episodes
                      WHERE tvshow_id IN (276562, 321060)
                      GROUP BY tvshow_id, season
                  )

                  This should return 5 values.

              Solution #2:
                  SELECT id
                  FROM (
                      SELECT *, ROW_NUMBER() OVER (
                          PARTITION BY tvshow_id, season ORDER BY epnum DESC) AS ranking FROM episodes)C
                  WHERE ranking = 1
                  AND tvshow_id IN (276562, 321060)

              - The #2 solution is better because WHERE IN becomes slow on large tables.
                  This still needs improvements because I still have a WHERE IN
              - Now I need to fetch the tvshow_id's that the user is following and then execute
              the query above to get the season finales id's
  ✔ Fix modals @done(18-06-18 15:13)
      When a modal is opened there's an overlay on the whole page and it becomes unsuable (ie: cant go out of that state without reloading)
  ✔ Search results page @done(18-06-18 15:13)
      ✔ Create page w/ a grid @done(18-06-16 15:53)
      ✔ Create route POST tvshow/search/id @done(18-06-13 23:30)
      ✔ Pressing 'Enter' on the search bar should redirect to /search/id @done(18-06-16 20:19)
      ✔ Add Responsiveness @done(18-06-16 15:54)
      ✔ Add color change on hover @done(18-06-16 20:19)
      ✔ Fix anchor URLS (redirect to tvshow page) @done(18-06-16 21:10)
      ✔ Hide typeahead menu on mobile @done(18-06-18 15:13)
  ✔ fix knexfile reading env vars @done(18-10-02 17:58)
      this happens on both prod and dev envs
      ✔ When running migrations/seed @done(18-10-02 17:58)
          dotenv.config({ path: '../../.env' });
      ✔ When started in dev mode @done(18-10-02 17:58)
          dotenv.config();
  ✔ Users shouldnt be able to set episodes that havent aired yet as watched/unwatched @done(18-06-20 19:35)
  ✔ Try this: @done(18-10-02 17:58)
      on model w/ knex:
          func fooBar
              return knex()....
      on controller:
          const a = await fooBar
  TO CONFIRM: I believe the reason im not doing this is because I lose the error logs when an error is thrown in the model.
  ✔ Fix redis on vps @done(18-03-02 10:59)
      ReplyError: MISCONF Redis is configured to save RDB snapshots, but it is currently not
      able to persist on disk. Commands that may modify the data set are disabled, because
      this instance is configured to report errors during writes if RDB snapshotting fails
      (stop-writes-on-bgsave-error option). Please check the Redis logs for details about
      the RDB error.
      - wrong permissions
  ✔ Check if redis is saving session data correctly @done(18-02-13 22:16)
      local: redis-cli --scan --pattern 'sess:*'
      docker: docker-compose run redis redis-cli -h redis
      ✔ Check if the ttl if being updated while the user is active @done(18-03-02 09:55)
  ✔ Reset/Forget password flow is not right @done(18-03-02 09:44)
  ✔ Fix front-end js handler @done(18-03-02 09:44)
      - Currently it's trying to send a token from the url ??
      Flow:
          - 1. User clicks 'forgot password'
          - 2. Open modal to input email address (and captcha)
              - 2.1 On submit, validate email and make a POST request with the email address
              - 2.2 On receive, validate email, check if user exists, try to send email with token
                  Note: handle case where the account is not active (how?)
          - 3. Display success/error
          - 4. User clicks on the link that he received on his email
          - 5 Load index with reset password modal to input new password
              - 5.1 On submit, validate email and password, and make a POST requires with the email
          address, token and password
              - 5.2 On receive, validate email and password, check if user exists and token
          is valid, change password
          - 6. Display success/error

      Routes:
          - POST to generate token
          - GET to show modal to input new password
          - POST to change password
  ✔ Both knexfiles shouldnt be commited @done(18-03-01 22:23)
      - This is not a security problem because all the credentials are set in the .env file
      - Because of this, the knexfile.sample is no longer required
      ✔ Remove knexfile.sample.js @done(18-03-01 22:22)
      ✔ Remove knexfile from gitignore @done(18-03-01 22:23)
  ✔ Use lodash's _.template to make url/message constants @done(18-02-21 23:53)
  ✔ Replace then/catches for try/catch async @done(18-02-21 23:33)
  ✔ Update path join's to use separate arguments @done(18-02-21 23:32)
      The point of using path join is to leave the path handling to 'path'
  ✔ Information on the database needs to be updated "regularly" @done(18-02-21 23:30)
      An example of this is HTGAWM where the last 3 eps from the current season dont have a name nor a description.
      The api provides some sort of HEAD req to get the last updated date. Compare that date with the db to figure out if there's a need to
      make a 'full' request.
  ✘ Fix Bluebird warnings about promises being created but not returned by handler @cancelled(18-02-20 18:22)
      This is caused by a file in a package (tarn/lib/Pool.s) where they dont return 2 promises on purpose
      This is explicitly said in comments in the code itself (lines 267 and 297)

      This is duplicated somewhere in this notes. Add this to OneNote !
  ✔ Add resending activation token feature @done(18-02-20 13:47)
      ✔ Add new modal with email input or change the login modal @done(18-02-20 17:46)
  ✔ isTokenValid in not working properly (i think) since I can use the activation link over and over @done(18-02-20 13:51)
  again and the success/error message is always the same
  ✔ Add google analytics @done(18-02-19 21:20)
  ✔ Test reset password @done(18-02-19 20:48)
      ✔ Reset token should be cleared after the user changed the password @done(18-02-19 20:48)
  ✔ nodemailer @done(18-02-19 18:00)
      ✔ Add message in the front-end informing the user to check the 'spam' folder @done(18-02-19 21:43)
      ✔ Add 'reply to' email address @done(18-02-19 21:23)
      ✘ create gmail account for the website (while I dont setup the email server) @cancelled(18-02-18 16:37)
          email server has been created
      ✔ figure out how to use pug to make templates @done(18-02-19 18:00)
      ✘ Add dkim @cancelled(18-02-19 18:00)
          dkim is added server-side
      ✘ check github student offers related to email service providers @cancelled(18-02-02 03:15)
          mailchimp is a better alternative since it provides 12000 free emails/month forever
          but this requires an email server on my vps..
      ✔ create a 'noreply' email address @done(18-02-19 18:00)
  ✔ fix max-length errors in models/tvshows @done(18-02-16 16:28)
      these errors are caused by jsdocs.
      consider creating a "type" where the objects are defined
  ✔ Special episodes (season 00) should be hidden by default (as im currently doing in the tvshow view) @done(18-02-10 14:57)
      They are now hidden but I need to add a checkbox to show them
      ✘ Add checkbox to show/hide special episodes @cancelled(18-02-16 18:29)
          Postponed for now
  ✔ Gulp serve (browsersync) should watch server files and trigger a reload (including .pug files) @done(18-02-16 17:16)
      Reloading only on .pug file changes because I have no idea how to reload on server changes
      Ideally this should be triggered when the server is ready.
      ie. on server.js listen callback
  ✔ Check eslint-disable 's @done(18-02-16 16:28)
  ✔ Check TODOs in code @done(18-02-16 16:28)
  ✘ Filter knex errors logs (the 'error' property is probably enough) @cancelled(18-02-16 16:29)
  ✔ Remove unnecessary variables from knex querys (just do 'await knex()...') @done(18-02-16 16:28)
  ✔ Move all generic error messages to constants file @done(18-02-15 17:55)
      ✔ Server-side @done(18-02-15 17:55)
      ✔ Client-side @done(18-02-15 17:55)
      Make sure they are the same
  ✔ Refactor client-side errors @done(18-02-15 17:55)
      ✘ Create a function for "alert errors" @cancelled(18-02-15 17:55)
      ✔ Use server error messages when possible @done(18-02-15 17:55)
          Only use case for client-side error messages, is on validation errors (confirm first)
  ✔ Try to merge both object.assign's into a single one @done(18-02-15 13:38)
  ✔ When a user logs in with an email that is not registred, the error message is "your account hasnt been activated yet" @done(18-02-15 13:22)
          The problem was on the validation order. I was checking if the account is active before checking if the user exists
  ✔ Build locally and send built version to docker ?? @done(18-02-13 22:16)
      Im currently building the app on docker
  ✔ node env should be set on npm script and not on env @done(18-02-15 00:56)
  ✔ Fix knex warning: @done(18-02-15 00:45)
      Knex:warning - Use async .hasTable to check if table exists and then use plain .createTable.
      Since .createTableIfNotExists actually just generates plain "CREATE TABLE IF NOT EXIST..." query it
      will not work correctly if there are any alter table queries generated for columns afterwards.
      To not break old migrations this function is left untouched for now, but it should not be used when
      writing new code and it is removed from documentation.
  ✔ Lint everything @done(18-02-13 22:16)
  ✘ The route used to mark an episode as watched/unwatched is using the tvshowId but it's not really required @cancelled(18-02-02 20:26)
      the episodeId is enough ?
  ✘ Move calendar and watchlist routers to user router @cancelled(18-02-02 01:49)
  ✔ When a controller called, and a model method used in that controller throws an error, @done(18-02-02 01:48)
  is that error catched in the controller ? If so, I can remove the console.logs from models and log
  only on the controllers
      - When the error happens on the model (eg: db query), the error details are logged by the catch on the model.
      - The controller only logs a error message referencing the model function that caused the error.
  ✔ Replace jquery selectors by 'this' or using 'event' as much as possible @done(18-02-02 01:31)
  ✔ Add "This episode has no summary" and "TBC" @done(18-02-02 01:31)
  ✘ save state of sidebar in cookie or localstorage so that when changing pages, the sidebar keeps its state (state = reduced or not) @cancelled(18-02-02 01:00)
  This is working but needs some finetuning:.
  This wont be implemented for now since there are some glitches with the animations
      When a user has the sidebar 'reduced' and refreshes, there's a slight delay on the jquery trigger which makes the animation 'ugly'
  ✘ Remove transition animation when the state is reduced @cancelled(18-02-02 01:00)
  ✘ There's no need to trigger 'full' because the sidebar is full by default @cancelled(18-02-02 01:00)
  The issue with using jquery to track state is that in every page where the sidebar needs to be reduced, the user
  can always see the sidebar 'reducing' even without animation. Because I dont think this is a good UX, I removed
  the code around this (either w or wo animations)
  ✔ limit airdate on watchlist query @done(18-02-02 01:23)
      show episodes that have aired, not the full season eps
  ✔ When removing the last episode or an entire season @done(18-02-02 00:42)
      ✔ Remove table @done(18-02-21 23:33)
      ✔ Remove container div (if there are no more episodes/seasons) @done(18-02-21 23:33)
      ✔ Remove the poster (if there are no more episodes/seasons) @done(18-02-21 23:33)
      ✔ Highlight the next poster or show message "no more unwatched episodes" @done(18-02-21 23:33)
  ✔ Add "mark season as watched" feature @done(18-01-31 19:58)
  ✔ When doing ajax requests, is the done() callback called only on http status code 200 or do I need to @done(18-01-30 22:45)
  check for other errors (as im currently doing) ?
      - The done() callback is called when the server responds with a 2XX code
  ✔ Throw error when setting a watched episode as watched @done(18-01-30 22:37)
      Handle this on the db side where the combo userId + tvshowId + episodeId needs to be unique
  ✔ poster click is not showing/hiding episode tables correctly @done(18-01-30 22:33)
      This bug happens on the 2nd click (3rd tvshow)
      To reproduce:
          1. Click on any poster (except the one which is active)
          2. Click on another poster (except the one which is active)
      The issue is that the previous div is not added a class 'd-none' when a different poster is clicked
  ✘ allow login with username or email @cancelled(18-01-30 21:31)
          cant do this since im allowing duplicate usernames
          if I really want this feature, Id have to add a username field to the signup form because spliting the email (as currently) wont guarantee unique usernames
  ✔ Fix all ajax requests done/fail @done(18-01-30 21:26)
      Arguments list:.
          .done((data, textStatus, jqXHR) => {
          .fail((jqXHR, textStatus, errorThrown) => {
  ✔ fix logo hover @done(18-01-30 21:25)
  ✔ typeahead input loading gif is not working @done(18-01-30 19:09)
  ✔ fix sidebar on hover li's @done(18-01-30 19:09)
  ✔ add button to hide sidebar @done(18-01-30 21:25)
  ✘ Consider moving auth-user related functions to user controller @cancelled(18-01-24 21:48)
  ✔ Error fetching episodes from season because season 0 doesnt exist. @done(18-01-24 13:37)
      I was subtracting 1 from the airedSeasons.length which is not correct since there are tvshows that dont have a season 0.
      seasons: {
          "airedSeasons": [
              "1"
          ],
          "airedEpisodes": "10",
          "dvdSeasons": [],
          "dvdEpisodes": "0"
      }
  ✘ Replace both middlewares getTvshowDataFromApi and getTvshowDataFromDb for a single function getTvshowData that calls them @cancelled(18-01-16 23:06)
  ✔ FIX LATEST SEASON !!! @done(18-01-16 13:48)
  ✔ Remove 'Show' and replace by 'Tvshow' @done(17-12-19 22:04)
  ✔ Models cant have req or res @done(17-12-19 22:05)
  ✔ Some of the logic in controllers should be in model @done(17-12-19 22:05)
      Example: Get episodes from the database
          Route: call controller method getEpisodesFromDb
          Controller: call model method getEpidosodesFromDb
          Model: getEpisodesFromDb definition
          The difference between the controller and the model is that one is middleware and the other is the function itself.
          This is useful in case I need that function elsewhere
          ✔ Http status codes on error @done(18-01-23 02:15)
  ✔ figure out middleware chain on /tvshow/:tvshowid @done(17-12-19 22:05)
      App wont work until this is resolved
      Current:.
          .- Check if its on db
          .- Get latest season from api (this would skip if both middlewares "are ok")
          .- Check if user is following
          .- Get info from api (this would skip too)
          .- Render
              .- Fetch info from db OR fetch info from api
      Solution #1:.
          .- Check if its on db
          .- Check if user is following
          .- Get latest season from api (this would skip if both middlewares "are ok")
          .- Get info from api (this would skip too)
          .- Render
              .- Fetch info from db OR fetch info from api
  ✔ remove unnecessary bind's on tvshows route (only keep the ones that need the "this" keyword from the controller) @done(17-12-19 22:05)
  ✔ route showid check for latestseason is only required if the show is NOT on the db. @done(17-12-19 22:05)
  if the show is on the db, the latest season can be determined by the sql query.
  ✔ isUserFollowingTvShow middleware must always go to the next middleware @done(17-12-06 16:59)
      ✔ The response (true or false) must be sent to the next middlware @done(17-12-06 16:59)
      Solutions:.
          ✔ res.locals.VAR_NAME = VAR_CONTENT @done(17-12-06 16:59)
          ✘ req.VAR_NAME = VAR_CONTENT @cancelled(17-12-06 16:59)
  ✔ Test tvshow search route @done(17-12-06 16:16)
      If this works, do the same thing for the other routes
  ✔ Refactor tvshows controller @done(18-01-23 02:15)
      ✘ Move thetvdb api token related functions to 'utils' @cancelled(18-01-16 23:06)
      ✘ Make tvshows controller a class @cancelled(17-12-06 17:03)
          There's no point in doing this because there's no state in the controller.
          Although the apiKey can be considered state, its state must be shared with all instances of controller
      ✘ Create new instance on router (new tvshowctrl()) @cancelled(17-12-06 17:27)
          See above
      ✔ Refactor jsdocs @done(18-01-23 02:15)
  ✔ Remove map's @done(18-01-23 02:15)
      Use the queries themselves to change property names, filter, etc..
  ✔ return on next() ?? @done(17-12-19 22:05)
  ✔ return on res.json() ?? @done(17-12-19 22:05)
Client-side js:
  ✔ Make new structure @done(18-02-04 21:16)
      ✔ Setup event handlers separatly @done(18-01-29 01:04)
      ✔ Move event handlers to their own functions @done(18-02-04 21:16)
  ✔ Consider separation of handlers @done(18-02-04 21:16)
  ✔ Consider separation of configs @done(18-01-29 01:04)
  ✘ Add global variables so that eslint doesnt complain @cancelled(18-02-04 21:16)
      Atm im disabling the eslint rule for undef
Global:
  ✔ Log last_login @done(18-07-25 01:18)
      ✔ Add column in users table (timestamp) @done(18-07-25 01:11)
      ✔ Update on login @done(18-07-25 01:18)
          There's no need to do an insert since the default value is prior to the website creation
  ✘ Setup webworkers for caching @cancelled(18-02-21 23:56)
      Too much work. Maybe in the future.
  ✘ Add winston logging (use levels, save level in env var) @cancelled(18-02-21 23:56)
      Too much work. Maybe in the future.
  ✔ Analytics (registred users, concurrent users) @done(18-02-21 23:56)
      But may not be very useful since ad-blockers block google analytics
  ✘ Figure out html caching @cancelled(18-02-21 23:56)
      Since pug is generating the html dinamically, I dont think this is possible
      Too much work. Maybe in the future.
  ✘ Add 2FA @cancelled(18-02-21 23:56)
      Too much work. Maybe in the future.
      https://github.com/speakeasyjs/speakeasy
      https://davidwalsh.name/2fa
      https://auth0.com/blog/from-theory-to-practice-adding-two-factor-to-node-dot-js/
      https://ponyfoo.com/articles/setting-up-2fa-for-nodejs-applications
  ✔ Check if gulp production works @done(18-02-15 01:00)
      ✔ Check differences in filesize (js and css) @done(18-02-15 01:00)
  ✔ Remove express static handler when in production @done(18-02-15 01:00)
  ✔ Update production ip on knexfile (should be localhost) @done(18-02-15 01:00)
  ✔ Building with gulp --production doesnt quit after completed (it just hangs) @done(18-02-15 01:00)
  ✔ Use redis for session storage @done(18-02-15 01:00)
  ✔ Fix http status codes @done(18-02-06 19:48)
      201 - Created
      400 - Bad Request
      401 - Unauthorized
      422 - Validation Errors
      500 - Server Error
  ✔ Consider moving auth to controllers @done(18-01-23 02:15)
  ✔ Routes should not have any logic @done(17-12-19 22:05)
      All the logic should be in the router controller
  ✔ Add returns to async functions in tvshows controller @done(18-01-23 02:15)
  ✔ Add error handling @done(18-01-23 02:15)
      ✔ Log errors in console @done(18-01-23 02:15)
      ✔ Render error template to front end @done(18-01-23 02:15)
  ✘ Investigate: @cancelled(18-01-24 15:37)
      ✘ In case a user runs into an error, this error is probably on the logger BUT how do I know what was the user trying to do ? @cancelled(18-01-24 15:37)
  ✘ Languages i18n @cancelled(18-01-24 15:37)
  ✔ Objects with episodes/show info should match the db columns (or vice-versa) @done (2017-11-12 13:03:54)
  ✔ Separate middlewares to their own file (auth/utils.js) @done(17-12-04 22:14)
  ✔ Investigate "defer" on js scripts @done(17-12-06 01:16)
  ✔ Add helmet @done(17-12-04 22:22)
      Not all packages come activated by defaule
      Also check csrf package
Index:
  ✔ "Enter" button does not submit login/register modal @done (2017-10-13 19:09:54)
Views:
  ✔ Add tvshow view that renders dinamically according to the url @done (2017-10-11 13:15:00)
  ✔ Make error view @done (2017-11-11 18:28:53)
      ✔ Display the sidebar and an error message @done (2017-11-11 18:28:51)
  ✔ The error view must be rendered according to the environment @done(17-11-27 19:34)
      If in development: Show error trace
      If in production: Show generic error
TvShows:
  ✔ Add cronjob to update tvshow info and episodes @done(18-02-21 23:58)
      ✔ Get tvshows from the db (thetvdb id and lastUpdated fields) @done(18-02-21 23:58)
      ✔ Make request to thetvdb api (to retrieve lastUpdated date) @done(18-02-21 23:58)
      ✔ For every tvshow, compare the lastUpdate dates @done(18-02-21 23:58)
          ✔ If the dates don't match, make a full request and update tvshow @done(18-02-21 23:58)
  ✔ Add watched functionality @done(18-02-05 18:37)
      Try to use the same handler for this as used in watchlist/calendar
  ✔ Fix column width (use %s) @done(18-02-04 19:47)
  ✔ Imdb link is not correct @done(18-01-24 19:41)
  ✔ Add/remove tvshow @done (2017-11-12 13:01:15)
      ✔ Add "cooldown" @done(18-01-24 21:49)
      ✔ Add disabled styling @done(18-01-24 19:45)
      ✔ Figure out how to handle the state of the button. @done (2017-11-12 12:52:09)
          ✘ I think the best option is to fetch the list of tvshows a user is following on login. @cancelled (2017-11-12 12:51:40)
              This way, we can use that to handle the add/remove buttons and the calendar
              This can be done with cookies or local storage
          ✔ Check if the user if following a tvshow when the tvshow page is rendered @done (2017-11-12 12:52:07)
      ✔ Add timeout to the button (disable button if a request is still pending) @done (2017-11-12 11:39:44)
      ✔ Test adding a new show @done (2017-11-12 11:39:45)
      ✔ Test adding a show that a user is already following @done (2017-11-12 12:23:13)
          ✘ The combination user_id + tvshow_id needs to be unique in the usertv table schema @cancelled (2017-11-12 12:12:16)
          ✔ Throwing errors in the query itself is expensive. Validation before querying is prefered. @done (2017-11-12 12:23:11)
      ✔ Test removing a show that a user is not following @done (2017-11-12 12:51:21)
      ✔ Test front-end button state @done (2017-11-12 12:26:33)
          ✔ Should show "Add tvshow" if the user is not following that show @done (2017-11-12 12:26:31)
          ✔ Should show "Remove tvshow" if the user is following that show @done (2017-11-12 12:26:32)
      ✔ Fix response from server @done (2017-11-12 11:39:50)
          {"addShowToUser":{"tvshowId":"266189"}}
      ✘ Disable button when user is not logged in @cancelled (2017-11-12 12:55:18)
          Add css class
          Stop events
      ✔ Remove button when user is not logged in @done (2017-11-12 12:55:20)
      ✔ Add "alert" informing the user he cant perform any actions without logging in @done (2017-11-12 13:01:04)
      ✔ Change button class when successfully added/removed @done (2017-11-12 12:51:24)
  ✔ Search for tvshows @done (2017-10-31 11:35:13)
Calendar:
  ✔ Add watched functionality @done(18-02-04 21:14)
      ✘ Use the same handler for this as used in watchlist/calendar @cancelled(18-02-02 18:15)
          This would make the handler function a mess. Since the watchlist only allows for marking as 'watched' while the calendar
          allow for marking as 'watched' and 'unwatched'
      ✔ Figure out how to get watched episodes on page load @done(18-02-04 21:14)
          This needs to be done server side
  ✘ Build the calendar without caling buildcalendar() ? @cancelled (2017-10-27 12:42:51)
  ✔ Implement the calendar class @done (2017-10-6 11:58:28)
  ✔ Add rows dynamically to the calendar @done (2017-10-6 11:58:25)
      Atm, the number of rows is hardcoded (6 rows) but this number is the maximum that the calendar can get.
      The problem is that there's a scenario where the calender only needs 4 rows.
      Scenario: when February has 28 days and the 1st day in on a Monday.
  ✔ Length of the calendarData array should not be hardcoded to 42 @done (2017-10-5 23:37:13)
      Like the issue above, this value is hardcoded and should be dynamic. 42 days is the maximum number of
  days that may be required for a certain Month/Year combination. However, this number can be as low as 28
  in the scenario described in the issue above.
  ✔ Add styling for previous/next month days @done (2017-10-6 11:58:31)
  ✔ Fix calendar model jsdoc @done (2017-10-27 13:01:24)
  ✔ Test December calendar. Altough the year is not shown on the front-end I probably need this to work properly to populate the episodes @done (2017-10-31 11:25:09)
      ✔ Fix daysFromNetMonth @done (2017-10-31 11:25:09)
      ✔ Fix new year @done (2017-10-31 11:25:10)
  ✔ Add jsdoc to calendar model and tvshows controller @done (2017-10-31 11:34:12)
  ✔ Month lengths from previous months are incorrect @done (2017-10-5 23:33:40)
      ✔ When creating a calendar for Match 2017, the days from the previous month are 30 Feb, 31 Feb, which do not exist @done (2017-10-5 23:34:43)
      ✔ When creating a calendar for April 2017, the days from the previous month are 26 Mar to 30 Mar but should be 27 Mar to 30 Mar @done (2017-10-5 23:33:38)
      ✔ When creating a calendar for July 2017,  the days from the previous month are 27 Jun to 6 Ago but should be 26 Jun to 30 Jun @done (2017-10-5 23:33:39)
          The issue here is that I was reading the daysInMonth array without subtracting 1 (since the array is 0 based)
  ✔ Add month navigation @done (2017-11-17 19:32:07)
      ✔ Already implemented, testing need @done (2017-11-17 19:32:08)
  ✔ Check if January/December calendar works @done (2017-11-22 21:04:45)
      ✔ Days are correctly set @done (2017-11-22 21:04:46)
      ✔ Episodes are fetched @done (2017-11-22 21:04:47)

TvShow page:
  ✔ Genre is not displayed properly @done(18-01-29 00:37)
      When the tvshow is classified in multiple genres, the array of genres is displayd in a single line,
      and without any spaces. Consider looping over the array and adding a space. Also, add a different class
      for different array lengths.
      Eg:.
          1. tvshow has 3 genres
          Loop over the 3 genres, add space between them, add class with text-size 10px
          2. tvshow has 2 genres
          Loop over the 2 genres, add space between them, add class with text-size 12px
  ✔ Figure out a fix for null values (new season, episode 0, missing data, ..) @done(18-02-04 21:14)
  ✔ When a season is over and there's already an entry for the next season, we might get something like @done(18-02-04 21:14)
  [ { num: 1, name: 'TBA ', airdate: '', summary: null } ] in the episodes array fetched from the api
  This is only an issue when there's no airdate.
  ✘ Change season poster when changing season selector @cancelled(18-01-24 21:49)
  ✘ Add own ratings @cancelled(18-01-23 02:16)
  ✔ The TvShows.getInfo() request can be improved by filtering the results we need @done(18-01-23 02:16)
  ✔ Render tvshow page dinamically @done (2017-10-11 13:14:17)
  ✔ Get information about the tvshow from the api: @done (2017-10-27 13:01:49)
  ✔ name @done (2017-10-27 13:01:42)
  ✔ banner @done (2017-10-27 13:01:43)
  ✔ poster @done (2017-10-27 13:01:43)
  ✔ description @done (2017-10-27 13:01:44)
  ✔ premiered @done (2017-10-27 13:01:45)
  ✔ network @done (2017-10-27 13:01:45)
      ✔ status @done (2017-10-27 13:01:46)
      ✔ airdate @done (2017-10-27 13:01:48)
      ✔ episodes @done (2017-10-27 13:01:48)
  ✔ To display the latest season episodes in the table, we need to first ask for the latest season and then the episodes @done (2017-10-22 23:09:06)
  ✔ Add button to select seasons @done (2017-10-22 23:09:09)

Calendar page:
    ✔ Change date format and decrease height @done(18-10-05 23:06)
        Now: 01-01-2018
        Change to: 01 Jan
        Can't use moment in pug even if i import it client-side
        this needs to be done either using valina js on the pug template, or by injecting momentjs into the pug template
    ✔ Fix db query: @done (2017-10-27 12:43:01)
        Remove tvshow_id
        Add tvshow name
        Add episode name
    ✔ Add link to tvshow page on the tvshow name @done (2017-10-27 13:01:20)
    ✔ Fix cell template @done (2017-10-27 12:43:04)
        This should be
            [checkbox] TvShow Name
            Episode Name (S##E##)
    ✔ Add month navigation @done (2017-11-22 21:04:53)

Watchlist page:
  ✔ Set episode as watched @done(18-02-04 21:14)
      ✔ Check if user is logged in @done(18-02-04 21:14)
      ✔ POST to ???? with tvshowId and episodeId @done(18-02-04 21:14)
      ✔ If successful, remove line from table and update unwatched episodes counter @done(18-02-04 21:14)
      ✔ If error, display error toastr @done(18-02-04 21:14)
  ✔ Fix error shown when the watchlist variable is null or undefined. @done(18-01-29 19:57)
      Im checking if the variable watchlist exists. If it doesnt exists, a generic error is show.
      However, there can be multiple reasons for the variable not to exist:.
          - Server error while fetching episodes (i doubt this is a valid reason, since the error would be catch'd)
          - User is not following any tvshow
          - User is following at least one tvshow but doesnt have any unwatched episodes
      This last 2 reasons need to be diferentiated
  ✔ If user has unwatched episodes from multiple seasons, the ordering is wrong @done(18-01-29 19:57)
  ✔ Fetch unwatched episodes: @done(18-01-29 00:12)
      ✔ Fetch all the episodes from all the tvshows that the user is following @done(18-01-29 00:12)
          working query: SELECT episodes.tvshow_id, episodes.season, episodes.epnum, episodes.title, episodes.overview, episodes.airdate FROM episodes JOIN usertv ON (episodes.tvshow_id = usertv.tvshow_id) WHERE usertv.user_id = 1 ORDER BY episodes.tvshow_id, episodes.season, episodes.epnum ASC
      ✔ Fetch all watched episodes and substract them from the list received above @done(18-01-29 00:12)
          this can probably be done on the same query with a join

          solution using left join:
          SELECT episodes.id, episodes.tvshow_id, episodes.season, episodes.epnum, episodes.title, episodes.overview, episodes.airdate FROM episodes
          JOIN usertv ON (episodes.tvshow_id = usertv.tvshow_id)
          LEFT JOIN usereps ON (usereps.ep_id = episodes.id)
          WHERE usertv.user_id = 1 AND usereps.ep_id IS NULL
          ORDER BY episodes.tvshow_id, episodes.season, episodes.epnum ASC
          benchmarks:
              pgadmin: 345ms
              psql: 5.6 ms / 3 ms

          solution using not in:
          SELECT episodes.id, episodes.tvshow_id, episodes.season, episodes.epnum, episodes.title, episodes.overview, episodes.airdate FROM episodes
          JOIN usertv ON (episodes.tvshow_id = usertv.tvshow_id)
          WHERE usertv.user_id = 1
          AND episodes.id NOT IN ( SELECT ep_id FROM usereps)
          ORDER BY episodes.tvshow_id, episodes.season, episodes.epnum ASC
          benchmarks:
              pgadmin: 330ms
              psql: 3 ms / 2.4 ms

Styling:
  ✔ Tvshow episode table should have pseudo-static column width @done(18-02-04 21:14)
      The table is (and should be) dynamic but it changes columns width on a minimum value length change
      For example, ep name "This is some ep name" and ep name "This is an ep name", should have the same columns lenght (ie the table should be the "same")
      Maybe this can be solved with a minimum width ?
  ✘ Replace "alerts" with toastr notifications @cancelled(18-01-24 13:39)
      What alerts ?
  ✔ Add/remove tvshow button doesnt update @done(18-01-24 13:38)
  ✔ Update bootstrap to v4 stable @done(18-01-23 13:50)
      ✔ Migrate colors from the variables file @done(18-01-24 13:53)
      ✔ Fix bugs generated by this update @done(18-01-24 14:12)
          ✔ Search input icon is not showing @done(18-01-24 14:12)
          ✔ Dropdown menu on tvshows page is full width @done(18-01-24 14:12)
  ✔ Fix autocomplete results div opacity @done(18-01-23 02:17)
  ✔ Fix calendar styling (days of week "header") @done(18-01-23 02:17)
  ✔ Remove unused bootstrap scss @done(17-12-04 19:01)
  ✘ Add transitions on "alerts" @cancelled(17-12-04 16:59)
      Alerts shown on login/register errors
  ✔ Style typeahead input/menu @done (2017-10-11 13:15:16)
  ✔ Add pointer cursor to the typeahead menu @done (2017-10-11 13:16:55)
  ✔ Typeahead menu doesnt show on top of everything @done (2017-10-21 19:19:18)
      Ended up refactoring the whole page structure by adding wrappers (as suggested in many bootstrap sidebar themes examples)
  ✔ Move wrapper styles to the correct location (defined in main.scss atm) @done (2017-11-25 12:16:04)
  ✔ Remove nsbp; and add white-space css @done (2017-11-6 23:32:09)
  ✔ TvShow status text color should be green/red depending on the show status @done (2017-11-25 12:03:53)
      span.d-block.text-center.green= status
  ✔ clean up scss and lint @done (2017-11-25 12:54:10)
  ✔ Remove underline on hover on the logo @done(17-11-25 15:39)
Auth:
  ✔ Add red border to form inputs when there's a validation error @done(18-07-23 19:32)
  ✘ Test: See if the email address from facebook is handled correcly when the user has multiple emails @cancelled(18-07-23 21:20)
  ✔ When the user gets a validation error on signup, closes the modal and then re-opens it, the validation error still shows @done(18-07-23 19:32)
      Clear all validation errors when the modal is closed
  ✔ Test: Multiple active sessions on different devices/places @done(18-07-23 19:31)
      What happens if a user has 2+ active sessions and makes actions on both+ places ?
      The user needs to refresh to be able to see the changes. This could be improved in the future using sockets.
  ✔ Figure out what happens when a user signs-up with an email + password and then logs in with facebook (which has the same email) @done(18-07-22 00:58)
      Tell the user that an account with that email already exists, ask if they want to link their facebook
  account to their existing account

      Accounts are 'merged'.
  ✔ Signup/Login with facebook @done(18-07-23 20:09)
      ✘ Add button to signup modal @cancelled(18-07-22 00:45)
      ✔ Add button to index @done(18-07-22 00:45)
          ✔ Style the button @done(18-07-23 20:09)
      ✔ Check if there's an account with that email @done(18-07-22 00:54)
          ✘ If yes, ask the user if they want to link their facebook account @cancelled(18-07-22 00:54)
          This wont be an option for now. I'll assume the user always wants to merge the accounts.
          This 'link' is not a real 'link' because the user search is always done via email addresses.
          This means that an existing user with email+password that logsin using their facebook account
      which has the same email address, will end up in the same account with either login method.

          In the future, consider advantages on doing this properly.
      ✘ Ask the user if they want to add a password to their account @cancelled(18-07-22 00:57)
          ✘ If yes, show inputs @cancelled(18-07-22 00:57)
          ✘ If not, redirect @cancelled(18-07-22 00:57)
      ✔ Create account @done(18-07-22 00:57)
      ✘ Handle the case where a user signs-up with facebook but changes the email associated with fb later @cancelled(18-07-23 19:17)
          Not a priority since this is probably an edge-case.
  ✔ Remove activation token after its used @done(18-07-21 23:24)
      This may be already done, since Im checking this with the db seeds
  ✔ Test signup with an existing email @done(18-07-21 23:23)
  ✔ Add facebook login strategy @done(18-07-21 22:50)
      - Facebook callback url HAS to be https. Use ngrok for testing.
          1. Run Ngrok to generate https url
          2. Add the new https url to 'Valid OAuth Redirect URIs' in facebook settings
          3. Edit the passport callback url to the new https url
  ✘ Add admin functions: @cancelled(18-02-15 01:01)
      ✘ Edit tvshow data, episodes, etc.. @cancelled(18-02-15 01:01)
  ✔ Add activated column to user table. Send activation link. @done(18-01-29 00:11)
  ✔ When logging in on the tvshow page, return there instead of the homepage @done(18-01-24 21:51)
  ✔ Handle duplicate username error (its possible to have duplicate usernames without the same email) @done(18-01-24 21:51)
      example:-
      myname@mail.com          -> Username: myname
      myname@anothermail.com   -> Username: myname
      .- I'm allowing duplicate usernames, since I dont see any disadvantages
  ✔ Dont allow POST /signup if user is logged in @done(18-01-24 21:50)
      ✔ server-side @done(18-01-22 16:43)
      ✔ client-side @done(18-01-24 21:50)
          There's no way to the client to know if its authenticated, just hide login/signup buttons
  ✔ Dont allow POST /login if user is logged in @done(18-01-24 21:50)
      ✔ server-side @done(18-01-22 16:44)
      ✔ client-side @done(18-01-24 21:50)
      There's no way to the client to know if its authenticated, just hide login/signup buttons
  ✔ Add recover password @done(17-12-04 17:54)
  ✔ Add validation client-side @done(17-11-27 19:11)
      ✔ On signup: Valid email, Both passwords match, Password length @done(17-11-27 19:11)
      ✔ On login: Valid email, Password length @done(17-11-27 19:11)
  ✔ Add validation server-side @done(17-11-27 19:29)
      ✔ On signup: Valid email, Both passwords match, Password has min/max chars @done (2017-10-4 17:48:45)
      ✔ On login: Valid email @done(17-11-27 19:29)
  ✔ Add recaptcha @done(17-11-27 23:45)
      ✔ On register (always) @done(17-11-27 23:45)
      ✘ On login (after a # of failed attemps) @cancelled(17-11-28 15:19)
          Problem:
              1. The "limiter" im using is not good to trigger the recaptcha because it wont allow the following requests (cooldown)
          Notes:
              I cant trigger the recaptcha client-side because the user may manipulate that
              > The trigger must be server-side !!!
          Conclusion:
              I wont be triggering a recaptcha on login failed attemps because the "limiter" is not a great solution.
              In the future this will be implemented either by 1. using a table on the db 2. using redis
Database:
    ✘ Change "premiered" (res = "2013-09-23") and "airdate" (airsDayOfWeek = "Wednesday", airsTime = "8:00 PM") columns to timestamps @cancelled(18-10-05 23:07)
        check https://stackoverflow.com/questions/21019674/postgresql-create-table-and-set-specific-date-format

        Check if tvshow is on the database
        SELECT exists (SELECT 1 FROM tvshows WHERE thetvdb = <tvshowId> LIMIT 1);
    ✔ Correct seeds files @done(18-01-29 01:05)
    ✔ Add table for tracking user-episodes status (watched, not watched) @done(18-01-24 13:52)
    ✔ Migrate db to change overview/summary/description to overview @done (2017-11-22 21:06:12)
    ✔ TvShows: @done (2017-10-25 12:21:15)
        ✔ Add column imdb id @done (2017-10-4 17:49:39)
        ✔ Add column gender[] @done (2017-10-13 19:03:12)
        ✔ Add column network @done (2017-10-13 19:03:13)
        ✔ Add column airdate @done (2017-10-13 19:03:14)
Sidebar:
  ✘ Increase delay on search function (the request is triggered too fast) @cancelled(18-02-04 21:15)
      Trigger the first search X ms/s after keyup
      The following requests are rate limited by typeaheah itself (so I need to disable the keyup trigger after the 1st trigger)
  ✔ Typeahead menu dont show up on the correct position in every screen because the side bar is a col-* and its size changes depending on the viewport @done (2017-10-13 19:06:41)
  ✔ Search @done (2017-10-7 23:10:50)
      API Endpoint: https://api.thetvdb.com/search/series?name=SERIES_NAME
      Flow:
          ✔ Post to /tvshows/search @done (2017-10-7 23:09:57)
          ✔ Post to TVDB API (see endpoint above) @done (2017-10-7 23:09:58)
          ✔ Use autocomplete to display the results @done (2017-10-7 23:10:48)
          ✔ Go to tvshow page when selected @done (2017-10-11 13:13:41)
      ✔ Add loading icon @done(17-11-25 18:44)

Deploy:
  ✘ Investigate CI @cancelled(18-02-15 00:59)
  ✔ Docker @done(18-02-15 00:59)
      ✔ Install docker and docker compose @done(18-02-08 14:50)
      ✔ Make dockerfile and docker compose yml file @done(18-02-15 00:57)
      ✔ Use babel to transpile instead of calling babel-node directly @done(18-02-13 11:51)
      ✘ Add docker ignore file @cancelled(18-02-15 00:58)
      ✔ Investigate alpine versions of Node, Redis and Postgres @done(18-02-15 00:58)
          Currently using them.. Image size is way smaller and the differences between alpine and full images do
          not affect this project
      ✘ Deploy.sh wont be needed because when pushing to git, docker hub builds automatically @cancelled(18-02-15 00:59)
      ✔ Wait for it @done(18-02-15 00:56)
      #!/usr/bin/env bash
      Alpine images dont have bash
      Use this instead: /bin/sh
      Doesnt work syntax error
  ✔ Investigate other solutions @done(18-10-02 18:06)
Cron:
  ✘ Check if the cronjob is running every 23h or at 23:00 @cancelled(18-02-21 23:59)
      Im pretty sure it is running at 23:00
      Apparently cron doesnt work with numbers > 12 ?? but node cron should ??

      Running every 12h for now.

Random:
    - Code snippet for merging both maps used on user controller getWatchlist()
        watchlist = _.map(watchlist, el =>
            ({
                tvshowId: el.tvshowId,
                data: _(el.episodes).groupBy('season').map((items, season) => ({ season, episodes: items })),
                images: _.pick(_.find(tvshowPosters, { tvshowId: el.tvshowId }), 'images'),
            }));

    - Ajax Progress bar
    function setupXhr() {
        return function () {
            const xhr = new window.XMLHttpRequest();
            xhr.upload.addEventListener('progress', (evt) => {
                if (evt.lengthComputable) {
                    const percentComplete = evt.loaded / evt.total;
                    console.log(`Loaded: ${evt.loaded}`);
                    console.log(`Total: ${evt.total}`);
                    console.log(percentComplete);
                    $('#progress').css({
                        width: `${percentComplete * 100}%`,
                    });
                    if (percentComplete === 1) {
                        $('#progress').addClass('hide');
                        setTimeout(() => {
                            $('#progress').css({ width: 0 });
                        }, 50);
                        // $('#progress').addClass('hide').removeClass('notransition').css({ width: 0 });
                    }
                }
            }, false);
            xhr.addEventListener('progress', (evt) => {
                if (evt.lengthComputable) {
                    const percentComplete = evt.loaded / evt.total;
                    console.log(`Loaded: ${evt.loaded}`);
                    console.log(`Total: ${evt.total}`);
                    console.log(percentComplete);
                    $('#progress').css({
                        width: `${percentComplete * 100}%`,
                    });
                    if (percentComplete === 1) {
                        $('#progress').addClass('hide');
                        setTimeout(() => {
                            $('#progress').css({ width: 0 });
                        }, 510);
                        // $('#progress').addClass('hide').removeClass('notransition').css({ width: 0 });
                    }
                }
            }, false);
            return xhr;
        };
    }

    http://jszen.blogspot.pt/2007/03/how-to-build-simple-calendar-with.html

    I cant remember why I wanted to sort the episodes by season when fetching them in addEpisodesToDb
        This is the code I removed, in case I remember the reason why
            const reducedEpisodes = res.data.reduce((result, episode) => {
                if (!result[episode.airedSeason - 1]) result[episode.airedSeason - 1] = [];
                result[episode.airedSeason - 1].push(episode);
                return result;
            }, []);
            for (let i = 0; i < reducedEpisodes.length; i += 1) {
                if (reducedEpisodes[i]) {
                    if (episodes[i]) {
                        episodes[i].push(...reducedEpisodes[i]);
                    } else {
                        episodes[i] = reducedEpisodes[i];
                    }
                }
            }

    When testing the addEpisodesToDb -> requestPaginated function, I noticed a difference
  in episode numbers. For example, for the show "The Blacklist", the length of both pages
  (res.data.length) is 105 (100 + 5). However, the episodes' array only has length 97,
  which is the real number of episodes. This is because of "special" episodes like season previews,
  which have a season number = 0
  TLDR: There may be a difference in the number of episodes received/processed since Im not
  accounting for "special" episodes (that have season number = 0).

    Figure out why bind(this) and call(this) doesnt work on the requestPaginated function